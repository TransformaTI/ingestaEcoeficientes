<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:mulerequester="http://www.mulesoft.org/schema/mule/mulerequester" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/mulerequester http://www.mulesoft.org/schema/mule/mulerequester/current/mule-mulerequester.xsd">
    <db:generic-config name="Generic_Database_Configuration" url="jdbc:sqlserver://${db.server}:${db.port};databaseName=${db.databasename}; user=${db.username};password=${db.password}" driverClassName="com.microsoft.sqlserver.jdbc.SQLServerDriver" doc:name="Generic Database Configuration">
        <reconnect-forever frequency="30000"/>
    </db:generic-config>
    <flow name="TurnoFlow" initialState="started">
        <logger message="~~~~~~~~~~INICIO FLUJO TURNO~~~~~~~~~~" level="INFO" doc:name="Inicia flujo"/>
        <db:select config-ref="Generic_Database_Configuration" doc:name="Bomba parametro">
            <db:parameterized-query><![CDATA[SELECT
[ValorParametroBomba]
  FROM [Catalogos].[BombaParametro]
  where [ParametroBomba] = 'RutaTurnoBomba' and IdEstacion=${db.station}]]></db:parameterized-query>
        </db:select>
        <json:json-to-object-transformer returnClass="java.util.List" doc:name="JSON to Object"/>
        <collection-splitter doc:name="Splitter"/>
        <set-variable variableName="Tpath" value="#[payload.ValorParametroBomba]" doc:name="Variable Tpath"/>
        <logger message="========== Analizando Ruta: #[flowVars.Tpath]" level="INFO" doc:name="Analizando ruta"/>
        <set-variable variableName="Tarchivo" value="#[org.mule.util.FileUtils.listFiles(new java.io.File(flowVars.Tpath.toString()),null,false)]" doc:name="Variable Tarchivo"/>
        <choice doc:name="Choice">
            <when expression="#[flowVars.Tarchivo.toString() != &quot;[]&quot;]">
                <set-variable variableName="Tjson" value="#[flowVars.Tarchivo.toString().replace('[','[{&quot;ruta&quot;:&quot;').replace(', ','&quot;},{&quot;ruta&quot;:&quot;').replace(']','&quot;}]')]" mimeType="text/json" doc:name="Variable Tjson"/>
                <set-payload value="#[flowVars.Tjson.toString().replace('\\','/')]" doc:name="Set Payload"/>
                <json:json-to-object-transformer returnClass="java.util.List" doc:name="JSON to Object"/>
                <logger message="========== ARCHIVOS: #[message.payload]" level="INFO" doc:name="Archivos"/>
                <splitter expression="#[message.payload]" doc:name="Splitter"/>
                <set-variable variableName="TRutaBase" value="#[message.payload]" doc:name="Variable TRutaBase"/>

                <mulerequester:request resource="file:///#[flowVars.TRutaBase.ruta]" returnClass="java.lang.String" doc:name="Mule Requester"/>
                <set-variable variableName="Tcontenido" value="#[message.payloadAs(java.lang.String).toString()]" doc:name="Variable Tcontenido"/>
                <logger message="========== Procesando archivo: #[flowVars.TRutaBase.ruta] Longitud: #[flowVars.Tcontenido.length()]" level="INFO" doc:name="Procesando archivo"/>
                <set-variable variableName="Tfilename" value="#[message.inboundProperties.originalFilename]" doc:name="Variable Tfilename"/>
                <file:outbound-endpoint path="#[flowVars.Tpath]" outputPattern="#[flowVars.Tfilename]" responseTimeout="10000" doc:name="File"/>
                <db:stored-procedure config-ref="Generic_Database_Configuration" doc:name="sp_buscar_archivohash">
                    <db:parameterized-query><![CDATA[{call dbo.sp_buscar_archivohash
(:@Contenido)}]]></db:parameterized-query>
                    <db:in-param name="@Contenido" value="#[flowVars.Tcontenido]"/>
                </db:stored-procedure>

                <set-variable variableName="ValorRegresoT" value="#[payload.resultSet1.get(0).hash]" doc:name="Variable ValorRegresoT"/>
                <choice doc:name="Choice">
                    <when expression="#[flowVars.ValorRegresoT==0]">
                        <db:stored-procedure config-ref="Generic_Database_Configuration" doc:name="sp_Ins_Tb_Turno2">
                            <db:parameterized-query><![CDATA[{call dbo.sp_Ins_Tb_Turno2
(:@IdTicket,:@Tipo,:@NDespachador,:@LTSTotal,:@ImporteTotal,:@Inicio,:@Fin,:@NVentas,:@NoUsado1,:@NoUsado2,:@NoUsado3,:@InicioTotalizador,:@FinalTotalizador,:@InicioTicket,:@FinalTicket,:@LTSP1Cilindro,:@ImporteP1Cilindro,:@LTSP2Cilindro,:@ImporteP2Cilindro,:@LTSCilindro,:@ImporteCilindro,:@LTSP1Carburacion,:@ImporteP1Carburacion,:@LTSP2Carburacion,:@ImporteP2Carburacion,:@LTSCarburacion,:@ImporteCarburacion,:@PrecioP1,:@PrecioP2,:@Nombre,:@IdEstacion,:@IdEmpresa)}]]></db:parameterized-query>
                            <db:in-param name="@IdTicket" value="#[flowVars.Tcontenido.toString().substring(0,13)]"/>
                            <db:in-param name="@Tipo" value="#[flowVars.Tcontenido.toString().substring(13,14)]"/>
                            <db:in-param name="@NDespachador" value="#[flowVars.Tcontenido.toString().substring(14,20)]"/>
                            <db:in-param name="@LTSTotal" value="#[flowVars.Tcontenido.toString().substring(20,26)]"/>
                            <db:in-param name="@ImporteTotal" value="#[flowVars.Tcontenido.toString().substring(26,34)]"/>
                            <db:in-param name="@Inicio" value="#[flowVars.Tcontenido.toString().substring(34,46)]"/>
                            <db:in-param name="@Fin" value="#[flowVars.Tcontenido.toString().substring(46,58)]"/>
                            <db:in-param name="@NVentas" value="#[flowVars.Tcontenido.toString().substring(58,62)]"/>
                            <db:in-param name="@NoUsado1" value="#[flowVars.Tcontenido.toString().substring(62,70)]"/>
                            <db:in-param name="@NoUsado2" value="#[flowVars.Tcontenido.toString().substring(70,78)]"/>
                            <db:in-param name="@NoUsado3" value="#[flowVars.Tcontenido.toString().substring(78,86)]"/>
                            <db:in-param name="@InicioTotalizador" value="#[flowVars.Tcontenido.toString().substring(86,95)]"/>
                            <db:in-param name="@FinalTotalizador" value="#[flowVars.Tcontenido.toString().substring(95,104)]"/>
                            <db:in-param name="@InicioTicket" value="#[flowVars.Tcontenido.toString().substring(104,117)]"/>
                            <db:in-param name="@FinalTicket" value="#[flowVars.Tcontenido.toString().substring(117,130)]"/>
                            <db:in-param name="@LTSP1Cilindro" value="#[flowVars.Tcontenido.toString().substring(130,136)]"/>
                            <db:in-param name="@ImporteP1Cilindro" value="#[flowVars.Tcontenido.toString().substring(136,144)]"/>
                            <db:in-param name="@LTSP2Cilindro" value="#[flowVars.Tcontenido.toString().substring(144,150)]"/>
                            <db:in-param name="@ImporteP2Cilindro" value="#[flowVars.Tcontenido.toString().substring(150,158)]"/>
                            <db:in-param name="@LTSCilindro" value="#[flowVars.Tcontenido.toString().substring(158,164)]"/>
                            <db:in-param name="@ImporteCilindro" value="#[flowVars.Tcontenido.toString().substring(164,172)]"/>
                            <db:in-param name="@LTSP1Carburacion" value="#[flowVars.Tcontenido.toString().substring(172,178)]"/>
                            <db:in-param name="@ImporteP1Carburacion" value="#[flowVars.Tcontenido.toString().substring(178,186)]"/>
                            <db:in-param name="@LTSP2Carburacion" value="#[flowVars.Tcontenido.toString().substring(186,192)]"/>
                            <db:in-param name="@ImporteP2Carburacion" value="#[flowVars.Tcontenido.toString().substring(192,200)]"/>
                            <db:in-param name="@LTSCarburacion" value="#[flowVars.Tcontenido.toString().substring(200,206)]"/>
                            <db:in-param name="@ImporteCarburacion" value="#[flowVars.Tcontenido.toString().substring(206,214)]"/>
                            <db:in-param name="@PrecioP1" value="#[flowVars.Tcontenido.toString().substring(214,220)]"/>
                            <db:in-param name="@PrecioP2" value="#[flowVars.Tcontenido.toString().substring(220,226)]"/>
                            <db:in-param name="@Nombre" value="#[flowVars.Tcontenido.toString().substring(226,252)]"/>
                            <db:in-param name="@IdEstacion" value="${db.station}"/>
                            <db:in-param name="@IdEmpresa" value="${db.empresa}"/>
                        </db:stored-procedure>
                                 <db:stored-procedure config-ref="Generic_Database_Configuration" doc:name="sp_Ins_ArchivoHash">
                            <db:parameterized-query><![CDATA[{call dbo.sp_Ins_ArchivoHash
(:@Hash,:@Tipo,:@Nombre)}]]></db:parameterized-query>
                            <db:in-param name="@Hash" value="#[flowVars.Tcontenido.toString()]"/>
                            <db:in-param name="@Tipo" value="${db.TipoT}"/>
                            <db:in-param name="@Nombre" value="#[flowVars.Tfilename.toString()]"/>

                        </db:stored-procedure>
                        <logger message="========== Archivo procesado: #[message.inboundProperties.originalFilename]" level="INFO" doc:name="Archivo procesado"/>
                    </when>
                    <otherwise>
                        <logger message="EXISTE LA HUELLA TURNOS" level="INFO" doc:name="Huella existe"/>
                    </otherwise>
                </choice>
            </when>
            <otherwise>
                <logger message="========== No se encontraron archivos" level="INFO" doc:name="No hay archivos pendientes"/>
            </otherwise>
        </choice>


        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <logger  level="INFO" doc:name="Logger error" message="Error en proceso de carga de turnos"/>
        </catch-exception-strategy>

    </flow>
</mule>