<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:context="http://www.springframework.org/schema/context" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:mulerequester="http://www.mulesoft.org/schema/mule/mulerequester" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/mulerequester http://www.mulesoft.org/schema/mule/mulerequester/current/mule-mulerequester.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd">
    <context:property-placeholder location="db-Config.properties"/>
    <flow name="VentasFlow">
        <poll doc:name="Poll">
            <fixed-frequency-scheduler frequency="10000" startDelay="5000"/>
            <db:select config-ref="Generic_Database_Configuration" doc:name="Database">
                <db:parameterized-query><![CDATA[SELECT
[ValorParametroBomba]
  FROM [Catalogos].[BombaParametro]
  where [ParametroBomba] = 'RutaVentaBomba']]></db:parameterized-query>
            </db:select>
        </poll>
        <logger message="~~~~~~~~~~INICIO FLUJO VENTAS~~~~~~~~~~" level="INFO" doc:name="Logger"/>
        <collection-splitter doc:name="Collection Splitter"/>
        <set-variable variableName="Vpath" value="#[payload.ValorParametroBomba]" doc:name="Variable"/>
        <logger message="========== Analizando Ruta: #[flowVars.Vpath]" level="INFO" doc:name="Logger"/>
        <set-variable variableName="Varchivo" value="#[org.mule.util.FileUtils.listFiles(new java.io.File(flowVars.Vpath.toString()),null,false)]" doc:name="Variable" />
        <choice doc:name="Choice">
            <when expression="#[flowVars.Varchivo.toString() != &quot;[]&quot;]">
                <set-variable variableName="Vjson" value="#[flowVars.Varchivo.toString().replace('[','[{&quot;ruta&quot;:&quot;').replace(', ','&quot;},{&quot;ruta&quot;:&quot;').replace(']','&quot;}]')]" mimeType="text/json" doc:name="Variable"/>
                <set-payload value="#[flowVars.Vjson.toString().replace('\\','/')]" doc:name="Set Payload" mimeType="text/json"/>
                <json:json-to-object-transformer returnClass="java.util.List" doc:name="JSON to Object"/>
                <logger message="========== ARCHIVOS: #[message.payload]" level="INFO" doc:name="Logger"/>
                <splitter expression="#[message.payload]" doc:name="Splitter"/>
                <set-payload value="#[message.payload]" doc:name="Set Payload"/>
                <logger message="========== Procesando archivo: #[payload.ruta]" level="INFO" doc:name="Logger"/>
                <mulerequester:request resource="file:///#[payload.ruta]" returnClass="java.lang.String" doc:name="Mule Requester"/>

                <db:stored-procedure config-ref="Generic_Database_Configuration" doc:name="Database">
                    <db:parameterized-query><![CDATA[{call dbo.sp_Ins_Tb_Ticket2
(:@IdTicket,:@Tipo1,:@NCliente,:@Precio,:@Litros,:@Subtotal,:@Iva,:@Total,:@InicioDespacho,:@FinalDespacho,:@NVentasTurno,:@InicioTurno,:@NOperador,:@FormaPago,:@NoUsado1,:@Tipo2,:@Factor,:@NoUsado2,:@NoUsado3,:@NombreCliente,:@IdEstacion)}]]></db:parameterized-query>
                    <db:in-param name="@IdTicket" value="#[message.payloadAs(java.lang.String).toString().substring(0,13)]"/>
                    <db:in-param name="@Tipo1" value="#[message.payloadAs(java.lang.String).toString().substring(13,14)]"/>
                    <db:in-param name="@NCliente" value="#[message.payloadAs(java.lang.String).toString().substring(14,20)]"/>
                    <db:in-param name="@Precio" value="#[message.payloadAs(java.lang.String).toString().substring(20,26)]"/>
                    <db:in-param name="@Litros" value="#[message.payloadAs(java.lang.String).toString().substring(26,32)]"/>
                    <db:in-param name="@Subtotal" value="#[message.payloadAs(java.lang.String).toString().substring(32,40)]"/>
                    <db:in-param name="@Iva" value="#[message.payloadAs(java.lang.String).toString().substring(40,48)]"/>
                    <db:in-param name="@Total" value="#[message.payloadAs(java.lang.String).toString().substring(48,56)]"/>
                    <db:in-param name="@InicioDespacho" value="#[message.payloadAs(java.lang.String).toString().substring(56,68)]"/>
                    <db:in-param name="@FinalDespacho" value="#[message.payloadAs(java.lang.String).toString().substring(68,80)]"/>
                    <db:in-param name="@NVentasTurno" value="#[message.payloadAs(java.lang.String).toString().substring(80,84)]"/>
                    <db:in-param name="@InicioTurno" value="#[message.payloadAs(java.lang.String).toString().substring(84,96)]"/>
                    <db:in-param name="@NOperador" value="#[message.payloadAs(java.lang.String).toString().substring(96,102)]"/>
                    <db:in-param name="@FormaPago" value="#[message.payloadAs(java.lang.String).toString().substring(102,104)]"/>
                    <db:in-param name="@NoUsado1" value="#[message.payloadAs(java.lang.String).toString().substring(104,106)]"/>
                    <db:in-param name="@Tipo2" value="#[message.payloadAs(java.lang.String).toString().substring(106,108)]"/>
                    <db:in-param name="@Factor" value="#[message.payloadAs(java.lang.String).toString().substring(108,111)]"/>
                    <db:in-param name="@NoUsado2" value="#[message.payloadAs(java.lang.String).toString().substring(111,113)]"/>
                    <db:in-param name="@NoUsado3" value="#[message.payloadAs(java.lang.String).toString().substring(113,145)]"/>
                    <db:in-param name="@NombreCliente" value="#[message.payloadAs(java.lang.String).toString().substring(145,180)]"/>
                    <db:in-param name="@IdEstacion" value="${db.station}"/>


                </db:stored-procedure>
                <file:outbound-endpoint path="${db.vbackup}" outputPattern="#[message.inboundProperties.originalFilename].BKP" responseTimeout="10000" doc:name="File"/>
                <logger message="========== Archivo procesado: #[message.inboundProperties.originalFilename]" level="INFO" doc:name="Logger"/>
            </when>
            
            <otherwise>
                <logger message="========== No se encontraron archivos" level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>

        <catch-exception-strategy doc:name="VentasCatch_Exception_Strategy">
            <logger message="&#161;&#161;&#161; HA OCURRIDO UN ERROR  EN FLUJO VENTAS !!!" level="INFO" doc:name="Logger"/>
        </catch-exception-strategy>
    </flow>
</mule>